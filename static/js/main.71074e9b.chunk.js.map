{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActiveScreen","App","React","useState","StartScreen","activescreen","setactivescreen","className","onClick","togglePlayfield","BoardParent","id","Playfield","Board","tileArray","i","push","tileArrayFinal","map","numb","Tile","props","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uIAGKA,E,uEAAAA,O,yBAAAA,I,8BAAAA,M,KAiEUC,MA/Df,WAAe,MAK2BC,IAAMC,SAASH,EAAaI,aALvD,mBAKNC,EALM,KAKQC,EALR,KAQb,SAASF,IACP,OAAQ,qBAAKG,UAAW,gBAAkBF,GAAcL,EAAaI,YAAc,IAAM,WAAYI,QAASC,EAAtG,SACN,sBAAKF,UAAU,WAAf,UACE,gDACA,mBAAGA,UAAU,SAAb,wBACA,mBAAGA,UAAU,SAAb,2BAKN,SAASG,IACP,OAAO,qBAAKC,GAAG,aAAaJ,UAAW,iBAAmBF,GAAcL,EAAaY,UAAY,IAAM,WAAYJ,QAASC,EAArH,SAAsI,cAACI,EAAD,MAG/I,SAASA,IAIP,IAFA,IAAIC,EAAsB,GAEjBC,EAAI,EAAGA,GAAK,IAAKA,IACxBD,EAAUE,KAAKD,GAGjB,IAAME,EAAiBH,EAAUI,KAAI,SAAAC,GACnC,OAAO,cAACC,EAAD,CAAMD,KAAMA,OAMrB,OAHc,qBAAKR,GAAG,QAAQJ,UAAU,QAA1B,SACXU,IAKL,SAASG,EAAKC,GACZ,OAAO,qBAAKV,GAAI,OAASU,EAAMF,KAAKG,UAAWf,UAAU,OAAlD,SAA0Dc,EAAMF,OAGzE,SAASV,IACHJ,GAAcL,EAAaI,YAC7BE,EAAgBN,EAAaY,WAE7BN,EAAgBN,EAAaI,aAIjC,OACE,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACH,EAAD,IACA,cAACM,EAAD,UC/COa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.71074e9b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nenum ActiveScreen{Playfield, StartScreen}\n\nfunction App() {\n\n  //variables here\n  //how to bind --> const [val, updateVal] = useState(1)\n\n  const [activescreen, setactivescreen] = React.useState(ActiveScreen.StartScreen);\n\n  //funtions here\n  function StartScreen() {\n    return (<div className={\"StartScreen \" + (activescreen==ActiveScreen.StartScreen ? \" \" : \"hidden \")} onClick={togglePlayfield}>\n      <div className=\"GameName\">\n        <p>Insert Gamename</p>\n        <p className=\"Border\">Start Game</p>\n        <p className=\"Border\">Tutorial</p>\n      </div>\n    </div>)\n  }\n\n  function BoardParent() {\n    return <div id=\"play-field\" className={\"board-parent \" + (activescreen==ActiveScreen.Playfield ? \" \" : \"hidden \")} onClick={togglePlayfield}><Board /></div>\n  }\n\n  function Board() {\n\n    var tileArray: number[] = [];\n\n    for (var i = 1; i <= 100; i++) {\n      tileArray.push(i);\n    }\n\n    const tileArrayFinal = tileArray.map(numb => {\n      return <Tile numb={numb} />\n    })\n\n    var element = <div id=\"board\" className=\"board\">\n      {tileArrayFinal}\n    </div>;\n    return element;\n  }\n\n  function Tile(props: { numb: number }) {\n    return <div id={\"Tile\" + props.numb.toFixed()} className=\"tile\">{props.numb}</div>\n  }\n\n  function togglePlayfield() {\n    if (activescreen==ActiveScreen.StartScreen) {\n      setactivescreen(ActiveScreen.Playfield)\n    } else {\n      setactivescreen(ActiveScreen.StartScreen)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <StartScreen />\n        <BoardParent />\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}